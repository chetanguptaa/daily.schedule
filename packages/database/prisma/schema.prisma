// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EventStatus {
  pending
  confirmed
  rejected
}

model User {
  id          String     @id @default(uuid())
  name        String
  email       String     @unique
  accessToken String?    @unique
  picture     String
  createdAt   DateTime   @default(now())
  schedules   Schedule[]
  events      Event[]
}

model Schedule {
  id             String         @id @default(uuid())
  userId         String
  title          String
  timezone       String         @default("UTC")
  default        Boolean        @default(false)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @default(now())
  user           User           @relation(fields: [userId], references: [id])
  availabilities Availability[]
  events         Event[]
}

model Availability {
  id         String                 @id @default(uuid())
  scheduleId String
  dayOfWeek  Int
  createdAt  DateTime               @default(now())
  updatedAt  DateTime               @default(now())
  schedule   Schedule               @relation(fields: [scheduleId], references: [id], onDelete: Cascade)
  timeSlots  AvailabilityTimeSlot[]
}

model AvailabilityTimeSlot {
  id             String       @id @default(uuid())
  availabilityId String
  startTime      String
  endTime        String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now())
  availability   Availability @relation(fields: [availabilityId], references: [id], onDelete: Cascade)
}

model Event {
  id          String    @id @default(uuid())
  userId      String
  scheduleId  String
  platformId  String
  title       String
  description String    @default("")
  duration    Int       @default(15)
  link        String
  platform    Platform  @relation(fields: [platformId], references: [id])
  user        User      @relation(fields: [userId], references: [id])
  schedule    Schedule  @relation(fields: [scheduleId], references: [id])
  bookings    Booking[]
}

model Booking {
  id          String      @id @default(uuid())
  eventTypeId String
  bookedBy    String
  startTime   DateTime
  endTime     DateTime
  status      EventStatus @default(pending)
  events      Event       @relation(fields: [eventTypeId], references: [id])
}

model Platform {
  id      String  @id @default(uuid())
  name    String
  default Boolean @default(false)
  events  Event[]
}
